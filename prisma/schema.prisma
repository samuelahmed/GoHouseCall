// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

//ONLY FOR AUTHENTICATION & SESSIONS
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

//this model is also used in useSession() 
model User {
    id                 String              @id @default(cuid())
    name               String?
    email              String?             @unique
    emailVerified      DateTime?
    image              String?
    image2             String?
    password           String?
    accounts           Account[]
    sessions           Session[]
    HC_Account         HC_Account[]
    HC_Notifications   HC_Notifications[]
    verificationTokens VerificationToken[]
    HC_Message         HC_Message[]
    HC_FriendList   HC_FriendList[]
}

//currently not used.
model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    id         String    @id @default(cuid())
    identifier String?
    token      String    @unique
    expires    DateTime?

    userId String

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([identifier, token])
}

//END ONLY FOR AUTHENTICATION & SESSIONS

//Tables for the app
model HC_Account {
    id                  String   @id @default(cuid())
    userId              String   @unique
    type                String? //patient or caregiver
    image               String?
    name                String?
    patientType         String? //self or manager
    email               String?
    bio                 String?
    address             String?
    city                String?
    zip                 String?
    welcomeFormComplete Boolean? @default(false)

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    // @@index([userId])
}

model HC_Notifications {
    id                   String   @id @default(cuid())
    userId               String   @unique
    messageNotifications Boolean? @default(true)
    messageFrequency     String?
    sessionApplications  Boolean? @default(true)
    payments             Boolean? @default(true)

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    // @@index([userId])
}

model HC_FriendList {
    id          String   @id @default(cuid())
    caregiverId String?
    patientId   String?
    createdAt   DateTime @default(now())
    pusherChannelName String?
    userId      String @unique//this is whoever created the channel

    User        User?    @relation(fields: [userId], references: [id])
    @@index([userId])
}


model HC_Message {
    id          String   @id @default(cuid())
    senderId    String   @unique
    receiverId  String
    createdAt   DateTime @default(now())
    channelName String?
    content     String   @db.Text
    userId      String? //this is whoever created the message

    User        User?    @relation(fields: [userId], references: [id])
    @@index([userId])
}




